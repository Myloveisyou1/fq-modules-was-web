package

    ${package}.controller;

import java.util.Arrays;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import ${package}.entity.${className};
import ${package}.entity.common.Pages;
import ${package}.entity.common.Result;
import ${package}.service.${className}Service;
import ${package}.utils.ResultUtil;


/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@RestController
@RequestMapping("${moduleName}/${pathName}" )
public class ${className}Controller {

    @Autowired
    private ${className}Service ${classname}Service;

    /**
     * 列表
     */
    @RequestMapping("/list" )
    public Result list(${className} ${classname}, Pages pages) {

        Map<String, Object> map = ${classname}Service.queryPage(ResultUtil.initParams(${classname}, pages));

        return ResultUtil.success(map.get("result" ), (Pages) map.get("pages" ));
    }


    /**
     * 查询单条信息
     */
    @RequestMapping("/info/{${pk.attrname}}" )
    public Result info(@PathVariable("${pk.attrname}" ) ${pk.attrType} ${pk.attrname}) {

        ${className} ${classname} =${classname}Service.selectById(${pk.attrname});
        return ResultUtil.success(${classname}, null);
    }

    /**
     * 保存信息
     */
    @RequestMapping("/save" )
    public Result save(${className} ${classname}) {

        return ResultUtil.success(${classname}Service.insert(${classname}), null);
    }

    /**
     * 修改信息
     */
    @RequestMapping("/update" )
    public Result update(${className} ${classname}) {

        return ResultUtil.success(${classname}Service.updateById(${classname}), null);
    }

    /**
     * 删除
     */
    /*
    @RequestMapping("/delete")
    public Result delete(@RequestBody ${pk.attrType}[]${pk.attrname}s) {
    ${classname}Service.deleteBatchIds(Arrays.asList(${pk.attrname}s));

        return ResultUtil.success(${classname}Service.deleteBatchIds(Arrays.asList(${pk.attrname}s)), null);
    }*/

}
